package com.azimuth.plot;

import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import com.azimuth.Settings;

/**
 * This class represents a 2d plot.
 * Plots are drawn using gnuplot.
 * 
 * @author marco
 * 
 */
public class Plot2D {


	public static class Series {
		private String title;
		private String description;
		private String xLabel;
		private String yLabel;
		private double[] xValues;
		private double[] yValues;
		
		public Series(){
			
		}

		public String getTitle() {
			return title;
		}

		public void setTitle(String title) {
			this.title = title;
		}

		public double[] getXValues() {
			return xValues;
		}

		public void setXValues(double[] xValues) {
			this.xValues = xValues;
		}

		public double[] getYValues() {
			return yValues;
		}

		public void setYValues(double[] yValues) {
			this.yValues = yValues;
		}

		public String getDescription() {
			return description;
		}

		public void setDescription(String description) {
			this.description = description;
		}

		public String getXLabel() {
			return xLabel;
		}

		public void setXLabel(String xLabel) {
			this.xLabel = xLabel;
		}

		public String getYLabel() {
			return yLabel;
		}

		public void setYLabel(String yLabel) {
			this.yLabel = yLabel;
		}

	}

	private Map<String, Series> data = new HashMap<String, Plot2D.Series>();
	private String title;
	private String xlabel;
	private String ylabel;

	public void addSeries(Series series) {
		data.put(series.getTitle(), series);
	}

	public void render(String filename) {
		// create raw data files
		writeRawDataToFiles(filename);
		
		// search for data filename
		// String[] rawdataFilenames
		
		try{
			// create a gnuplot script
			StringBuffer script = new StringBuffer();
			// header
			script.append("# Gnuplot script file automatically generated by Plot2D.java\n");
			script.append("# Plotting data in files ").append( "??" ).append("\n");
			script.append("set term png\n");
			script.append("set xlabel \"").append(xlabel).append("\"\n");
			script.append("set ylabel \"").append(ylabel).append("\"\n");
			script.append("set output \"").append(createImageFilename(filename)).append("\"\n");
			Collection<Series> collection = data.values();
			// plot command
			script.append("plot ");
			boolean first = true;
			for (Series s : collection) {
				if (!first){
					script.append(", ");
				} else {
					first = false;
				}
				String title = s.getTitle();
				script.append("\"").append( createSeriesFilename(filename, title) ).append("\"");
				script.append(" title \"").append(title).append("\" with linespoints ");
			}
			
			// write content to file
			FileWriter fstream = new FileWriter( createScriptFilename(filename));
			BufferedWriter out = new BufferedWriter(fstream);
			out.write( script.toString() );
			out.close();
		} catch (Exception e){
			System.err.println("Error: " + e.getMessage());
			e.printStackTrace();
		}
		// launch gnuplot

		try {
			String commandName = Settings.getInstance().getGnuplotCommandName();
			Runtime.getRuntime().exec(commandName +" "+ createScriptFilename(filename));
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		// TODO delete temp files
		
	}

	public void writeRawDataToFiles(String filename) {
		// print every series to a different file
		Collection<Series> collection = data.values();
		for (Series s : collection) {
			try {
				String title = s.getTitle();
				FileWriter fstream = new FileWriter( createSeriesFilename(filename, title) );
				BufferedWriter out = new BufferedWriter(fstream);
				out.write("# This file has been automatically generated by Plot2D\n");
				out.write("# " + s.getDescription() + "\n");
				out.write("# " + s.getXLabel() + "\t" + s.getYLabel() + "\n");
				double[] xValues = s.getXValues();
				double[] yValues = s.getYValues();
				for (int i = 0; i < xValues.length; i++) {
					out.write(xValues[i] + "\t" + yValues[i] + "\n");
				}
				out.close();
			} catch (Exception e) {
				System.err.println("Error: " + e.getMessage());
				e.printStackTrace();
			}
		}

	}
	
	private String createSeriesFilename(String basename, String title){
		return basename + "_" + title; 
	}
	
	private String createImageFilename(String basename){
		return basename + ".png";
	}
	
	private String createScriptFilename(String basename){
		return basename + ".plot";
	}

	public String getTitle() {
		return title;
	}

	public void setTitle(String title) {
		this.title = title;
	}

	public String getXLabel() {
		return xlabel;
	}

	public void setXLabel(String xlabel) {
		this.xlabel = xlabel;
	}

	public String getYLabel() {
		return ylabel;
	}

	public void setYLabel(String ylabel) {
		this.ylabel = ylabel;
	}
	
	
	

}
